function openBookList(f, d) {
    var b = "/book-list";
    var a = $("#ddBookList");
    var e = f.data("id");
    if (e && a.data("id") == e) {
        return
    }
    a.data("id", e);
    var c = a.find(".user-book-list");
    c.empty();
    $.ajax({
        type: "GET",
        url: b,
        data: {
            username: username,
            bookId: e
        },
        success: function (i) {
            if (i.err == ApiError.SUCCESS) {
                var g = a.find(".user-book-list");
                i.data.book_lists.forEach(function h(k) {
                    if (k.type == BookListType.FOLLOW) {
                        if (k.is_added) {
                            a.find(".btn-follow-book .checked").removeClass("hide")
                        } else {
                            a.find(".btn-follow-book .checked").addClass("hide")
                        }
                    } else {
                        if (k.type == BookListType.STORE) {
                            var j = $("#sampleBookList").clone().children();
                            j.find("a").data("id", k.id.$oid).find(".book-list-name").text(k.name);
                            if (k.is_added) {
                                j.find(".checked").removeClass("hide")
                            }
                            g.append(j)
                        }
                    }
                })
            }
        },
        error: function (i, g, h) {
            Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
        }
    })
}
actions.bookList = openBookList;
actions.addToBookList = function (g, c) {
    if (!g.find(".loading").hasClass("hide")) {
        return
    }
    var a = g.data("id");
    var f = g.closest(".dropdown-content").data("id");
    var e = [];
    if (f.indexOf(";") !== -1) {
        f.split(";").forEach(function (h) {
            e.push({
                name: "bookId",
                value: h
            })
        })
    } else {
        if (f) {
            e.push({
                name: "bookId",
                value: f
            })
        }
    }
    if (e.length == 0) {
        Materialize.toast("Bạn chưa chọn truyện!", 2000)
    } else {
        var b = "/book-list/" + a;
        var d = g.find(".checked").hasClass("hide");
        g.find(".checked").addClass("hide");
        g.find(".loading").removeClass("hide");
        if (d) {
            $.ajax({
                type: "POST",
                url: b,
                data: e,
                success: function (h) {
                    if (h.err == ApiError.SUCCESS) {
                        g.find(".loading").addClass("hide");
                        g.find(".checked").removeClass("hide")
                    } else {
                        g.find(".loading").addClass("hide")
                    }
                },
                error: function (j, h, i) {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000);
                    g.find(".loading").addClass("hide")
                }
            })
        } else {
            $.ajax({
                type: "DELETE",
                url: b,
                data: e,
                success: function (h) {
                    if (h.err == ApiError.SUCCESS) {
                        g.find(".loading").addClass("hide");
                        g.find(".checked").addClass("hide")
                    } else {
                        g.find(".loading").addClass("hide")
                    }
                },
                error: function (j, h, i) {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000);
                    g.find(".loading").addClass("hide")
                }
            })
        }
    }
    c.stopPropagation()
}
    ;
actions.addBookList = function (c, b) {
    var a = $("#mdAddBookList");
    a.find('[name="bookId"]').val(c.closest(".dropdown-content").data("id"));
    a.openModal();
    b.stopPropagation()
}
    ;
actions.submitBookList = function (h, e) {
    var c = $("#formAddBookList");
    if (!validateFormAddBookList(c)) {
        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
    } else {
        var b = $("#btnAddBookList").prop("disabled", true).removeClass("waves-effect");
        var d = "/book-list";
        var a = {};
        $.each(c.serializeArray(), function (j, k) {
            a[k.name] = k.value
        });
        var g = a.bookId;
        var f = [];
        if (g.indexOf(";") !== -1) {
            g.split(";").forEach(function (i) {
                f.push({
                    name: "bookId",
                    value: i
                })
            })
        } else {
            if (g) {
                f.push({
                    name: "bookId",
                    value: g
                })
            }
        }
        if (f.length == 0) {
            Materialize.toast("Bạn chưa chọn truyện!", 2000)
        } else {
            f.push({
                name: "name",
                value: a.name
            });
            $.ajax({
                type: "POST",
                url: d,
                data: f,
                success: function (i) {
                    if (i.err == ApiError.SUCCESS) {
                        h.closest(".modal").closeModal();
                        Materialize.toast("Thêm danh sách truyện thành công!", 2000)
                    } else {
                        if (i.err == ApiError.EXCEED_LIMIT) {
                            Materialize.toast("Hiện tại giới hạn mỗi người chỉ có " + i.data.limit + " danh sách truyện!", 2000)
                        } else {
                            if (i.err == ApiError.PARAMS_INVALID) {
                                Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
                            } else {
                                Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
                            }
                        }
                    }
                    b.prop("disabled", false).addClass("waves-effect")
                },
                error: function (k, i, j) {
                    b.prop("disabled", false).addClass("waves-effect")
                }
            })
        }
    }
    e.preventDefault();
    e.stopPropagation()
}
    ;
function validateFormAddBookList(b) {
    var c = true;
    var a = {};
    $.each(b.serializeArray(), function (d, e) {
        a[e.name] = e.value
    });
    if (!a.name || a.name.length > 20) {
        $("#name").removeClass("valid").addClass("invalid");
        c = false
    } else {
        $("#name").removeClass("invalid").addClass("valid")
    }
    return c
}
actions.followBook = function (e, b) {
    if (!e.find(".loading").hasClass("hide")) {
        return
    }
    var d = e.closest(".dropdown-content").data("id");
    var a = "/book-list/follow";
    var c = e.find(".checked").hasClass("hide");
    e.find(".checked").addClass("hide");
    e.find(".loading").removeClass("hide");
    if (c) {
        $.ajax({
            type: "POST",
            url: a,
            data: {
                bookId: d
            },
            success: function (f) {
                if (f.err == ApiError.SUCCESS) {
                    e.find(".loading").addClass("hide");
                    e.find(".checked").removeClass("hide")
                } else {
                    e.find(".loading").addClass("hide")
                }
            },
            error: function (h, f, g) {
                Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000);
                e.find(".loading").addClass("hide")
            }
        })
    } else {
        $.ajax({
            type: "DELETE",
            url: a,
            data: {
                bookId: d
            },
            success: function (f) {
                if (f.err == ApiError.SUCCESS) {
                    e.find(".loading").addClass("hide");
                    e.find(".checked").addClass("hide")
                } else {
                    e.find(".loading").addClass("hide")
                }
            },
            error: function (h, f, g) {
                Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000);
                e.find(".loading").addClass("hide")
            }
        })
    }
    b.stopPropagation()
}
    ;
actions.addToReadingChapter = function (e, c) {
    if (!e.find(".loading").hasClass("hide")) {
        return
    }
    var b = e.closest(".dropdown-content").data("id");
    var a = "/chapter-list/reading";
    var d = e.find(".checked").hasClass("hide");
    e.find(".checked").addClass("hide");
    e.find(".loading").removeClass("hide");
    if (d) {
        $.ajax({
            type: "POST",
            url: a,
            data: {
                chapterId: b
            },
            success: function (f) {
                if (f.err == ApiError.SUCCESS) {
                    e.find(".loading").addClass("hide");
                    e.find(".checked").removeClass("hide")
                } else {
                    e.find(".loading").addClass("hide")
                }
            },
            error: function (h, f, g) {
                Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000);
                e.find(".loading").addClass("hide")
            }
        })
    } else {
        $.ajax({
            type: "DELETE",
            url: a,
            data: {
                chapterId: b
            },
            success: function (f) {
                if (f.err == ApiError.SUCCESS) {
                    e.find(".loading").addClass("hide");
                    e.find(".checked").addClass("hide")
                } else {
                    e.find(".loading").addClass("hide")
                }
            },
            error: function (h, f, g) {
                Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000);
                e.find(".loading").addClass("hide")
            }
        })
    }
    c.stopPropagation()
}
    ;
actions.addToFavoriteChapter = function (e, c) {
    if (!e.find(".loading").hasClass("hide")) {
        return
    }
    var b = e.closest(".dropdown-content").data("id");
    var a = "/chapter-list/favorite";
    var d = e.find(".checked").hasClass("hide");
    e.find(".checked").addClass("hide");
    e.find(".loading").removeClass("hide");
    if (d) {
        $.ajax({
            type: "POST",
            url: a,
            data: {
                chapterId: b
            },
            success: function (f) {
                if (f.err == ApiError.SUCCESS) {
                    e.find(".loading").addClass("hide");
                    e.find(".checked").removeClass("hide")
                } else {
                    e.find(".loading").addClass("hide")
                }
            },
            error: function (h, f, g) {
                Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000);
                e.find(".loading").addClass("hide")
            }
        })
    } else {
        $.ajax({
            type: "DELETE",
            url: a,
            data: {
                chapterId: b
            },
            success: function (f) {
                if (f.err == ApiError.SUCCESS) {
                    e.find(".loading").addClass("hide");
                    e.find(".checked").addClass("hide")
                } else {
                    e.find(".loading").addClass("hide")
                }
            },
            error: function (h, f, g) {
                Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000);
                e.find(".loading").addClass("hide")
            }
        })
    }
    c.stopPropagation()
}
    ;
actions.openChapterList = function (f, e) {
    var a = "/chapter-list";
    var c = $("#ddChapterList");
    var d = f.data("id");
    if (c.data("id") == d) {
        return
    }
    c.data("id", d);
    var b = c.find(".user-book-list");
    b.empty();
    $.ajax({
        type: "GET",
        url: a,
        data: {
            chapterId: d
        },
        success: function (h) {
            if (h.err == ApiError.SUCCESS) {
                h.data.chapter_lists.forEach(function g(i) {
                    if (i.type == ChapterListType.READING) {
                        if (i.is_added) {
                            c.find(".btn-reading-chapter .checked").removeClass("hide")
                        } else {
                            c.find(".btn-reading-chapter .checked").addClass("hide")
                        }
                    } else {
                        if (i.type == ChapterListType.FAVORITE) {
                            if (i.is_added) {
                                c.find(".btn-favorite-chapter .checked").removeClass("hide")
                            } else {
                                c.find(".btn-favorite-chapter .checked").addClass("hide")
                            }
                        }
                    }
                })
            }
        },
        error: function (i, g, h) {
            Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
        }
    })
}
    ;
