actions.confirmAddAdmin = function(e, c) {
    var a = $("#formGetProfile");
    if (!validateFormGetProfile(a)) {
        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
    } else {
        e.prop("disabled", true).removeClass("waves-effect");
        var b = "/user/check";
        var d = a.serializeArray();
        $.ajax({
            type: "GET",
            url: b,
            data: d,
            success: function(g) {
                if (g.err == ApiError.SUCCESS) {
                    var f = $("#mdConfirmAddAdmin");
                    f.find(".book-admin-link").attr("href", g.data.user.link);
                    f.find(".book-admin-avatar").attr("src", g.data.user.picture);
                    f.find(".book-admin-name").text(g.data.user.fullname);
                    $("#formAddAdmin").find("[name=username]").val(g.data.user.userslug);
                    f.openModal()
                } else {
                    if (g.err == ApiError.PARAMS_INVALID) {
                        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                    } else {
                        Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                    }
                }
                e.prop("disabled", false).addClass("waves-effect")
            },
            error: function(h, f, g) {
                e.prop("disabled", false).addClass("waves-effect")
            }
        })
    }
}
;
function validateFormGetProfile(b) {
    var c = true;
    var a = {};
    $.each(b.serializeArray(), function(d, e) {
        a[e.name] = e.value
    });
    if (!a.username || a.username.length < 3 || a.username.length > 40) {
        c = false;
        $("textarea[name='username']").removeClass("valid").addClass("invalid")
    } else {
        $("textarea[name='username']").removeClass("invalid").addClass("valid")
    }
    return c
}
actions.addAdmin = function(e, c) {
    var a = $("#formAddAdmin");
    e.prop("disabled", true).removeClass("waves-effect");
    var b = "/book/admin";
    var d = a.serializeArray();
    $.ajax({
        type: "POST",
        url: b,
        data: d,
        success: function(g) {
            if (g.err == ApiError.SUCCESS) {
                var f = $("#bookAdminItemSample").clone().children();
                f.find(".book-admin-link").attr("href", g.data.user.link);
                f.find(".book-admin-avatar").attr("src", g.data.user.picture);
                f.find(".book-admin-name").text(g.data.user.fullname);
                f.attr("data-value", g.data.user.userslug);
                $(".book-admin-list").append(f);
                Materialize.toast("Đã thêm thành công!", 5000);
                e.closest(".modal").closeModal();
                $("#mdAddBookAdmin").closeModal()
            } else {
                if (g.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                } else {
                    if (g.err == ApiError.EXCEED_LIMIT) {
                        Materialize.toast("Không thể thêm đồng quản lý do vượt quá giới hạn!", 5000)
                    } else {
                        if (g.err == ApiError.VERIFY_EMAIL) {
                            Materialize.toast("Vui lòng xác nhận email!", 5000)
                        } else {
                            Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                        }
                    }
                }
            }
            e.prop("disabled", false).addClass("waves-effect")
        },
        error: function(h, f, g) {
            e.prop("disabled", false).addClass("waves-effect")
        }
    })
}
;
actions.deleteAdmin = function(d, b) {
    var c = $("#mdConfirmDelAdmin");
    var a = d.closest(".book-admin-item");
    c.find(".btn-confirm").data("value", a.data("value"));
    c.openModal()
}
;
actions.confirmDelAdmin = function(d, b) {
    d.prop("disabled", true).removeClass("waves-effect");
    var a = "/book/admin";
    var c = {
        bookId: bookId,
        username: d.data("value")
    };
    $.ajax({
        type: "DELETE",
        url: a,
        data: c,
        success: function(e) {
            if (e.err == ApiError.SUCCESS) {
                $(".book-admin-item[data-value=" + e.data.username + "]").remove();
                Materialize.toast("Đã xóa thành công!", 5000);
                d.closest(".modal").closeModal()
            } else {
                if (e.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                } else {
                    if (e.err == ApiError.BLOCKED) {
                        Materialize.toast("Đồng quản lý từng cập nhật truyện, không thể xóa.", 5000)
                    } else {
                        Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                    }
                }
            }
            d.prop("disabled", false).addClass("waves-effect")
        },
        error: function(g, e, f) {
            d.prop("disabled", false).addClass("waves-effect")
        }
    })
}
;
actions.deleteShare = function(d, b) {
    var c = $("#mdConfirmDelShare");
    var a = d.closest(".book-admin-item");
    c.find(".btn-confirm").data("value", a.data("value"));
    c.openModal()
}
;
actions.confirmDelShare = function(d, b) {
    d.prop("disabled", true).removeClass("waves-effect");
    var a = "/book/share";
    var c = {
        bookId: bookId,
        username: d.data("value")
    };
    $.ajax({
        type: "DELETE",
        url: a,
        data: c,
        success: function(e) {
            if (e.err == ApiError.SUCCESS) {
                $(".book-admin-item[data-value=" + e.data.username + "]").remove();
                Materialize.toast("Đã xóa thành công!", 5000);
                d.closest(".modal").closeModal()
            } else {
                if (e.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                } else {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                }
            }
            d.prop("disabled", false).addClass("waves-effect")
        },
        error: function(g, e, f) {
            d.prop("disabled", false).addClass("waves-effect")
        }
    })
}
;
actions.updOwner = function(d, c) {
    if ($("#mdListBookAdmin").hasClass("change-admin-mode")) {
        c.preventDefault();
        var b = $("#mdConfirmUpdOwner");
        var a = d.closest(".book-admin-item");
        b.find(".btn-confirm").data("value", a.data("value"));
        b.openModal()
    }
}
;
actions.confirmUpdOwner = function(d, b) {
    d.prop("disabled", true).removeClass("waves-effect");
    var a = "/book/owner";
    var c = {
        bookId: bookId,
        username: d.data("value")
    };
    $.ajax({
        type: "PUT",
        url: a,
        data: c,
        success: function(e) {
            if (e.err == ApiError.SUCCESS) {
                Materialize.toast("Đã chuyển quyền thành công!", 5000);
                window.location.reload();
                d.closest(".modal").closeModal()
            } else {
                if (e.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                } else {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                }
            }
            d.prop("disabled", false).addClass("waves-effect")
        },
        error: function(g, e, f) {
            d.prop("disabled", false).addClass("waves-effect")
        }
    })
}
;
actions.showListAdmin = function(b, a) {
    $("#mdListBookAdmin").removeClass("change-admin-mode").openModal()
}
;
actions.showUpdOwner = function(b, a) {
    $("#mdListBookAdmin").addClass("change-admin-mode").openModal()
}
;
actions.confirmLeaveAdmin = function(d, b) {
    d.prop("disabled", true).removeClass("waves-effect");
    var a = "/book/admin";
    var c = {
        bookId: bookId
    };
    $.ajax({
        type: "DELETE",
        url: a,
        data: c,
        success: function(e) {
            if (e.err == ApiError.SUCCESS) {
                Materialize.toast("Đã từ bỏ quyền đồng quản lý thành công!", 5000);
                window.location.reload();
                d.closest(".modal").closeModal()
            } else {
                if (e.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                } else {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                }
            }
            d.prop("disabled", false).addClass("waves-effect")
        },
        error: function(g, e, f) {
            d.prop("disabled", false).addClass("waves-effect")
        }
    })
}
;
actions.confirmBecomeEditor = function(d, b) {
    d.prop("disabled", true).removeClass("waves-effect");
    var a = "/book/editor";
    var c = {
        bookId: bookId
    };
    $.ajax({
        type: "POST",
        url: a,
        data: c,
        success: function(e) {
            if (e.err == ApiError.SUCCESS) {
                Materialize.toast("Đã trở thành Biên tập thành công!", 5000);
                window.location.reload();
                d.closest(".modal").closeModal()
            } else {
                if (e.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                } else {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                }
            }
            d.prop("disabled", false).addClass("waves-effect")
        },
        error: function(g, e, f) {
            d.prop("disabled", false).addClass("waves-effect")
        }
    })
}
;
actions.leaveEditor = function(d, b) {
    d.prop("disabled", true).removeClass("waves-effect");
    var a = "/book/editor";
    var c = {
        bookId: bookId
    };
    $.ajax({
        type: "DELETE",
        url: a,
        data: c,
        success: function(e) {
            if (e.err == ApiError.SUCCESS) {
                Materialize.toast("Đã từ bỏ quyền biên tập thành công!", 5000);
                window.location.reload();
                d.closest(".modal").closeModal()
            } else {
                if (e.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                } else {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                }
            }
            d.prop("disabled", false).addClass("waves-effect")
        },
        error: function(g, e, f) {
            d.prop("disabled", false).addClass("waves-effect")
        }
    })
}
;
actions.removeAdmin = function(d, c) {
    var b = $("#mdConfirmRemoveAdmin");
    var a = d.closest(".book-manager");
    b.find(".btn-confirm").data("value", a.data("id"));
    b.openModal();
    c.preventDefault()
}
;
actions.confirmRemoveAdmin = function(d, b) {
    d.prop("disabled", true).removeClass("waves-effect");
    var a = "/book/admin/titan";
    var c = {
        bookId: bookId,
        username: d.data("value")
    };
    $.ajax({
        type: "DELETE",
        url: a,
        data: c,
        success: function(e) {
            if (e.err == ApiError.SUCCESS) {
                $(".book-manager[data-id=" + e.data.username + "]").remove();
                Materialize.toast("Đã xóa thành công!", 5000);
                d.closest(".modal").closeModal()
            } else {
                if (e.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 5000)
                } else {
                    if (e.err == ApiError.BLOCKED) {
                        Materialize.toast("Đồng quản lý từng cập nhật truyện, không thể xóa.", 5000)
                    } else {
                        Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 5000)
                    }
                }
            }
            d.prop("disabled", false).addClass("waves-effect")
        },
        error: function(g, e, f) {
            d.prop("disabled", false).addClass("waves-effect")
        }
    })
}
;
