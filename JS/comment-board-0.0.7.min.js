actions.postComment = function (e, c) {
    var a = e.closest("form");
    if (!validateFormPostComment(a)) {
        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
    } else {
        e.prop("disabled", true).removeClass("waves-effect");
        var b = "/comment";
        var d = a.serializeArray();
        $.ajax({
            type: "POST",
            url: b,
            data: d,
            success: function (j) {
                if (j.err == ApiError.SUCCESS) {
                    Materialize.toast("Thêm bình luận thành công!", 2000);
                    var i = $("#sampleComment").clone().children();
                    i.attr("id", "comment-" + j.data.comment._id.$oid);
                    var h = e.closest(".comment-element");
                    i.find(".avatar-img").attr("src", h.find(".avatar-img").attr("src"));
                    i.find(".user-link").attr("href", h.find(".avatar-link").attr("href"));
                    i.find(".comment-content-msg").html(j.data.comment.message);
                    i.find(".comment-interval").text(timeSince(j.data.comment.interval));
                    i.addClass("comment-level-" + j.data.comment.level);
                    var f = {};
                    $.each(d, function (k, l) {
                        f[l.name] = l.value
                    });
                    if (f.parentId) {
                        i.find(".comment-reply-btn").data("id", j.data.comment.level < 2 ? j.data.comment._id.$oid : f.parentId).data("level", j.data.comment.level);
                        i.find(".comment-view-controls").addClass("hide");
                        i.find(".comment-edit-btn").data("id", j.data.comment._id.$oid);
                        i.find(".comment-del-btn").data("id", j.data.comment._id.$oid);
                        var g = a.closest(".comment-element");
                        i.addClass("comment-level-" + f.level);
                        g.replaceWith(i)
                    } else {
                        if (startComment == 0) {
                            i.find(".comment-reply-btn").data("id", j.data.comment._id.$oid).data("level", j.data.comment.level);
                            i.find(".comment-view-controls").addClass("hide");
                            i.find(".comment-edit-btn").data("id", j.data.comment._id.$oid);
                            i.find(".comment-del-btn").data("id", j.data.comment._id.$oid);
                            $("#commentList").prepend(i)
                        } else {
                            loadComment(f.bookId, 0)
                        }
                    }
                    tinyMCE.get("txtComment").setContent("")
                } else {
                    if (j.err == ApiError.BLOCKED) {
                        Materialize.toast("Không thể bình luận do đã bị chặn!", 2000)
                    } else {
                        if (j.err == ApiError.EXCEED_LIMIT) {
                            Materialize.toast("Bài viết quá ngắn hoặc quá dài!", 2000)
                        } else {
                            if (j.err == ApiError.VERIFY_EMAIL) {
                                Materialize.toast("Vui lòng xác nhận email!", 2000)
                            } else {
                                if (j.err == ApiError.PARAMS_INVALID) {
                                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
                                } else {
                                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
                                }
                            }
                        }
                    }
                }
                e.prop("disabled", false).addClass("waves-effect")
            },
            error: function (h, f, g) {
                e.prop("disabled", false).addClass("waves-effect")
            }
        })
    }
}
    ;
function validateFormPostComment(b) {
    var c = true;
    var a = {};
    tinymce.triggerSave();
    $.each(b.serializeArray(), function (d, e) {
        a[e.name] = e.value
    });
    if (!a.message || a.message.length < 1 || a.message.length > 20000) {
        c = false
    } else { }
    return c
}
actions.replyComment = function (h, b) {
    $("#commentList").find(".comment-dialog").remove();
    var g = $("#sampleReply").clone().children();
    var c = "txtComment" + uniqId();
    var e = g.find("textarea").attr("id", c);
    var a = h.data("level");
    if (a === 2 && h.data("user") && h.data("user") != userslug) {
        e.html("<p>@" + h.data("user") + ":&nbsp;</p>")
    }
    var d = (a < 2 ? a + 1 : a);
    var f = "comment-level-" + d;
    g.addClass(f);
    var i = h.closest(".comment-element");
    while (i.next() && i.next().hasClass("comment-element") && d <= i.next().find(".comment-reply-btn").data("level")) {
        i = i.next()
    }
    g.find("input[name=parentId]").val(h.data("id"));
    i.after(g);
    initTinyMCE(c)
}
    ;
tinymce.PluginManager.add("align", function (b, a) {
    b.addMenuItem("alignleft", {
        text: "Left",
        icon: "alignleft",
        cmd: "JustifyLeft"
    });
    b.addMenuItem("aligncenter", {
        text: "Center",
        icon: "aligncenter",
        cmd: "JustifyCenter"
    });
    b.addMenuItem("alignright", {
        text: "Right",
        icon: "alignright",
        cmd: "JustifyRight"
    });
    b.addMenuItem("alignjustify", {
        text: "Justitfy",
        icon: "alignjustify",
        cmd: "JustifyFull"
    });
    b.addButton("align", {
        type: "MenuButton",
        icon: "alignleft",
        title: "Alignment",
        menu: [b.menuItems.alignleft, b.menuItems.aligncenter, b.menuItems.alignright, b.menuItems.alignjustify]
    })
});
tinymce.PluginManager.add("linkmenu", function (b, a) {
    b.addButton("linkmenu", {
        type: "MenuButton",
        icon: "link",
        title: "Insert link",
        menu: [b.menuItems.link, b.menuItems.image, b.menuItems.media]
    })
});
function initTinyMCE(a) {
    tinymce.init({
        selector: "#" + a,
        theme: "modern",
        content_css: "/static/css/common/tinymce.min.css",
        body_class: "editor-default",
        menubar: false,
        plugins: "autolink link image media smileys autoresize align textcolor colorpicker paste",
        toolbar: "undo redo | bold italic underline strikethrough | align forecolor backcolor | smileys blockquote | link image media",
        elementpath: false,
        statusbar: false,
        autoresize_bottom_margin: 0,
        bbcode_dialect: "punbb",
        relative_urls: false,
        paste_remove_styles: true
    })
}
var startComment = 0;
function loadComment(c, b, d) {
    var a = "/comment";
    $.ajax({
        type: "GET",
        url: a,
        data: {
            bookId: c,
            chapterId: b,
            start: d,
            order: commentOrder
        },
        success: function (f) {
            if (f.err == ApiError.SUCCESS) {
                startComment = d;
                var k = $("#commentList");
                k.empty();
                f.data.comments.forEach(function (q) {
                    var p = $("#sampleComment").clone().children();
                    p.attr("id", "comment-" + q._id["$oid"]);
                    p.find(".comment-content-msg").html(q.message);
                    p.find(".username-link").attr("href", "/user/" + q.user.userslug).text(q.user.fullname);
                    if (q.user.picture) {
                        p.find(".avatar-img").attr("src", q.user.picture)
                    } else {
                        p.find(".avatar-img").attr("src", "/static/img/default-avatar.png")
                    }
                    p.find(".avatar-link").attr("href", "/user/" + q.user.userslug);
                    p.find(".comment-interval").text(timeSince(q.interval));
                    p.find(".comment-reply-btn").data("id", q._id["$oid"]).data("level", q.level);
                    if (!b && q.chapter) {
                        var o = p.find(".comment-chapter");
                        o.removeClass("hide");
                        o.find("a").attr("href", q.chapter.link).text(q.chapter.name_vi)
                    }
                    if (username != q.user.userslug && !isSuperAdmin) {
                        if (!hasDeleteCommentPermission) {
                            p.find(".comment-edit-controls").addClass("hide");
                            p.find(".comment-report-btn").data("id", q._id.$oid)
                        } else {
                            p.find(".comment-view-controls").addClass("hide");
                            p.find(".comment-edit-btn").addClass("hide");
                            p.find(".comment-del-btn").data("id", q._id.$oid)
                        }
                    } else {
                        p.find(".comment-view-controls").addClass("hide");
                        p.find(".comment-edit-btn").data("id", q._id.$oid);
                        p.find(".comment-del-btn").data("id", q._id.$oid)
                    }
                    p.addClass("comment-level-" + q.level);
                    k.append(p);
                    if (q.children) {
                        m(q)
                    }
                });
                function m(o) {
                    o.children.forEach(function (r) {
                        var p = $("#sampleComment").clone().children();
                        p.attr("id", "comment-" + r._id["$oid"]);
                        p.find(".comment-content-msg").html(r.message);
                        p.find(".username-link").attr("href", "/user/" + r.user.userslug).text(r.user.fullname);
                        if (r.user.picture) {
                            p.find(".avatar-img").attr("src", r.user.picture)
                        } else {
                            p.find(".avatar-img").attr("src", "/static/img/default-avatar.png")
                        }
                        p.find(".avatar-link").attr("href", "/user/" + r.user.userslug);
                        p.find(".comment-interval").text(timeSince(r.interval));
                        p.find(".comment-reply-btn").data("id", r.level < 2 ? r._id["$oid"] : o._id["$oid"]).data("user", r.user.userslug).data("level", r.level);
                        if (!b && r.chapter) {
                            var q = p.find(".comment-chapter");
                            q.removeClass("hide");
                            q.find("a").attr("href", r.chapter.link).text(r.chapter.name_vi)
                        }
                        if (username != r.user.userslug && !isSuperAdmin) {
                            if (!hasDeleteCommentPermission) {
                                p.find(".comment-edit-controls").addClass("hide");
                                p.find(".comment-report-btn").data("id", r._id.$oid)
                            } else {
                                p.find(".comment-view-controls").addClass("hide");
                                p.find(".comment-edit-btn").addClass("hide");
                                p.find(".comment-del-btn").data("id", r._id.$oid)
                            }
                        } else {
                            p.find(".comment-view-controls").addClass("hide");
                            p.find(".comment-edit-btn").data("id", r._id.$oid);
                            p.find(".comment-del-btn").data("id", r._id.$oid)
                        }
                        p.addClass("comment-level-" + r.level);
                        k.append(p);
                        if (r.children) {
                            m(r)
                        }
                    })
                }
                $(".comment-content-msg").readmore({
                    moreLink: '<a class="orange-text" href="#">Xem thêm</a>',
                    lessLink: '<a class="orange-text" href="#">Thu lại</a>'
                });
                $("#pageCmt").find("li").addClass("hide");
                if (f.data.first_page < f.data.start_page - 1) {
                    var l = $("#pageCmtFirst");
                    l.removeClass("hide");
                    l.find("a").data("start", (f.data.first_page - 1) * f.data.page_size)
                }
                if (f.data.start_page > f.data.first_page) {
                    var e = $("#pageCmtPre");
                    e.removeClass("hide");
                    e.find("a").data("start", (f.data.current_page - 2) * f.data.page_size)
                }
                var i = 1;
                for (var j = f.data.start_page; j <= f.data.end_page; j++) {
                    var h = $("#pageCmt" + i++);
                    h.removeClass();
                    if (j == f.data.current_page) {
                        h.addClass("active")
                    } else {
                        h.addClass("waves-effect")
                    }
                    h.find("a").data("start", (j - 1) * f.data.page_size).text(j)
                }
                if (f.data.end_page < f.data.last_page) {
                    var g = $("#pageCmtNext");
                    g.removeClass("hide");
                    g.find("a").data("start", f.data.current_page * f.data.page_size)
                }
                if (f.data.end_page < f.data.last_page) {
                    var n = $("#pageCmtLast");
                    n.removeClass("hide");
                    n.find("a").data("start", (f.data.last_page - 1) * f.data.page_size)
                }
            }
        },
        error: function (g, e, f) { }
    })
}
function uniqId() {
    return Math.round(new Date().getTime() + (Math.random() * 100))
}
initTinyMCE("txtComment");
function timeSince(b) {
    var a = Math.floor(b / 31536000);
    if (a > 1) {
        return "Cách đây " + a + " năm"
    }
    a = Math.floor(b / 2592000);
    if (a > 1) {
        return "Cách đây " + a + " tháng"
    }
    a = Math.floor(b / 86400);
    if (a > 1) {
        return "Cách đây " + a + " ngày"
    }
    a = Math.floor(b / 3600);
    if (a > 1) {
        return "Cách đây " + a + " tiếng"
    }
    a = Math.floor(b / 60);
    if (a > 1) {
        return "Cách đây " + a + " phút"
    }
    return "Cách đây " + Math.floor(b) + " giây"
}
actions.loadComment = function (b, a) {
    loadComment(b.data("book"), b.data("chapter"), b.data("start"))
}
    ;
actions.changeCommentOrder = function (b, a) {
    $("#btnCommentSort").trigger("close");
    if (commentOrder != b.data("order")) {
        commentOrder = b.data("order");
        loadComment(bookId, chapterId, 0)
    }
}
    ;
actions.delComment = function (c, a) {
    var b = $("#mdConfirmDelComment");
    b.find(".btn-confirm").data("id", c.data("id"));
    b.openModal()
}
    ;
actions.confirmDelComment = function (c, b) {
    var a = "/comment/" + c.data("id");
    c.prop("disabled", true).removeClass("waves-effect");
    $.ajax({
        type: "DELETE",
        url: a,
        success: function (g) {
            if (g.err == ApiError.SUCCESS) {
                var e = $("#comment-" + c.data("id"));
                var h = e.find(".comment-reply-btn").data("level");
                var d = e.next();
                var f;
                while (d && d.hasClass("comment-element") && h < d.find(".comment-reply-btn").data("level")) {
                    f = d;
                    d = d.next();
                    f.remove()
                }
                e.remove();
                c.find(".modal").closeModal();
                Materialize.toast("Xóa bình luận thành công!", 2000)
            } else {
                if (g.err == ApiError.PARAMS_INVALID) {
                    Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
                } else {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
                }
            }
            c.prop("disabled", false).addClass("waves-effect")
        },
        error: function (f, d, e) {
            c.prop("disabled", false).addClass("waves-effect")
        }
    })
}
    ;
actions.editComment = function (f, d) {
    var c = f.closest(".comment-element");
    var b = $("#sampleEdit").clone().children();
    b.addClass(c.attr("class"));
    b.find(".avatar-img").attr("src", c.find(".avatar-img").attr("src"));
    b.find(".user-link").attr("href", c.find(".avatar-link").attr("href"));
    b.find(".btn-edit-comment").data("id", f.data("id"));
    var a = "txtComment" + uniqId();
    var e = b.find("textarea").attr("id", a);
    e.html(c.find(".comment-content-msg").html());
    c.addClass("hide");
    c.after(b);
    initTinyMCE(a)
}
    ;
actions.submitEditComment = function (e, c) {
    var a = e.closest("form");
    if (!validateFormPostComment(a)) {
        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
    } else {
        e.prop("disabled", true).removeClass("waves-effect");
        var b = "/comment/" + e.data("id");
        var d = a.serializeArray();
        $.ajax({
            type: "PUT",
            url: b,
            data: d,
            success: function (h) {
                if (h.err == ApiError.SUCCESS) {
                    Materialize.toast("Chỉnh sửa bình luận thành công!", 2000);
                    var g = e.closest(".comment-element");
                    var f = g.prev();
                    f.find(".comment-content-msg").html(h.data.comment.message);
                    g.remove();
                    f.removeClass("hide")
                } else {
                    if (h.err == ApiError.PARAMS_INVALID) {
                        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
                    } else {
                        if (h.err == ApiError.EXCEED_LIMIT) {
                            Materialize.toast("Bài viết quá ngắn hoặc quá dài!", 2000)
                        } else {
                            Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
                        }
                    }
                }
                e.prop("disabled", false).addClass("waves-effect")
            },
            error: function (h, f, g) {
                e.prop("disabled", false).addClass("waves-effect")
            }
        })
    }
}
    ;
actions.cancelEditComment = function (d, c) {
    var b = d.closest(".comment-element");
    var a = b.prev();
    b.remove();
    a.removeClass("hide")
}
    ;
actions.reportComment = function (b, a) {
    var c = $("#mdReportComment");
    c.find('[name="commentId"]').val(b.data("id"));
    c.openModal()
}
    ;
actions.submitReportComment = function (e, c) {
    var a = e.closest("form");
    if (!validateFormReportComment(a)) {
        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
    } else {
        e.prop("disabled", true).removeClass("waves-effect");
        var b = "/comment/report";
        var d = a.serializeArray();
        $.ajax({
            type: "POST",
            url: b,
            data: d,
            success: function (f) {
                if (f.err == ApiError.SUCCESS) {
                    Materialize.toast("Cử báo bình luận thành công!", 2000)
                } else {
                    if (f.err == ApiError.PARAMS_INVALID) {
                        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
                    } else {
                        Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
                    }
                }
                e.prop("disabled", false).addClass("waves-effect")
            },
            error: function (h, f, g) {
                e.prop("disabled", false).addClass("waves-effect")
            }
        })
    }
}
    ;
function validateFormReportComment(b) {
    var c = true;
    var a = {};
    $.each(b.serializeArray(), function (d, e) {
        a[e.name] = e.value
    });
    if (!a.reason) {
        c = false
    }
    return c
}
;