actions.changeColor = function (c, b) {
    $("main").removeClass(function (e, f) {
        return (f.match(/(^|\s)color-\S+/g) || []).join(" ")
    });
    var d = c.attr("class").split(/\s+/);
    $.each(d, function (e, f) {
        if (f.startsWith("color-")) {
            $("main").addClass(f);
            Cookies.set("wkdth_bookContentColor", f, {
                expires: 90
            })
        }
    })
}
    ;
actions.showMdAddName = function (h, c) {
    if (selectedRange) {
        var e = $("#bookContentBody");
        var j = null;
        var b = 0;
        var d = 0;
        var k = "";
        for (var f in alignIndexes) {
            if (alignIndexes[f]["index"] <= selectedRange.start) {
                j = alignIndexes[f];
                b = alignIndexes[f]["index"]
            } else {
                if (j) {
                    k += j.origin;
                    j = null
                }
                if (alignIndexes[f]["index"] >= selectedRange.end) {
                    d = alignIndexes[f]["index"];
                    break
                }
                k += alignIndexes[f]["origin"]
            }
        }
        if (!d) {
            if (j) {
                k += alignIndexes[alignIndexes.length - 1]["origin"]
            }
            d = e.text().length
        }
        $("#nameVi").val(toTitleCase(e.text().substring(b, d).trim()));
        k = k.trim();
        $("#nameCn").val(k);
        transText();
        var g = $("#mdAddName");
        g.on("close", function (i) {
            g.closeModal({
                out_duration: 0
            })
        });
        g.openModal()
    }
    e.contextmenu("close")
}
    ;
touchs.untouchable = function (c, b) {
    b.preventDefault();
    b.stopPropagation()
}
    ;
touchs.showMdAddNameMobile = function (k, c) {
    var f = $("#bookContentBody");
    var h = getSelectionCharacterOffsetsWithin(f[0]);
    if (h.start < h.end) {
        selectedRange = h
    } else {
        selectedRange = null
    }
    if (selectedRange) {
        var l = null;
        var b = 0;
        var e = 0;
        var n = "";
        for (var g in alignIndexes) {
            if (alignIndexes[g]["index"] <= selectedRange.start) {
                l = alignIndexes[g];
                b = alignIndexes[g]["index"]
            } else {
                if (l) {
                    n += l.origin;
                    l = null
                }
                if (alignIndexes[g]["index"] >= selectedRange.end) {
                    e = alignIndexes[g]["index"];
                    break
                }
                n += alignIndexes[g]["origin"]
            }
        }
        if (!e) {
            if (l) {
                n += alignIndexes[alignIndexes.length - 1]["origin"]
            }
            e = f.text().length
        }
        $("#nameVi").val(toTitleCase(f.text().substring(b, e).trim()));
        n = n.trim();
        $("#nameCn").val(n);
        transText();
        var d = $(window).scrollTop();
        var j = $("#mdAddName");
        var m = {
            out_duration: 0,
            dismissible: false,
            complete: function () {
                $(window).scrollTop(d)
            }
        };
        j.on("close", function (i) {
            j.closeModal(m)
        });
        j.openModal(m)
    }
    c.preventDefault();
    c.stopPropagation()
}
    ;
function getSelectionCharacterOffsetsWithin(f) {
    var b = 0
        , e = 0
        , i = "";
    if (typeof window.getSelection != "undefined") {
        var d = window.getSelection().getRangeAt(0);
        var c = d.cloneRange();
        c.selectNodeContents(f);
        c.setEnd(d.startContainer, d.startOffset);
        b = c.toString().length;
        e = b + d.toString().length;
        i = d.toString();
        if (window.getSelection().empty) {
            window.getSelection().empty()
        } else {
            if (window.getSelection().removeAllRanges) {
                window.getSelection().removeAllRanges()
            }
        }
    } else {
        if (typeof document.selection != "undefined" && document.selection.type != "Control") {
            var g = document.selection.createRange();
            var h = document.body.createTextRange();
            h.moveToElementText(f);
            h.setEndPoint("EndToStart", g);
            b = h.text.length;
            e = b + g.text.length;
            i = g.text;
            document.selection.empty()
        }
    }
    return {
        start: b,
        end: e,
        selectedText: i
    }
}
actions.copyName = function (c, b) {
    if (selectedRange) {
        document.execCommand("copy")
    }
    $("#bookContentBody").contextmenu("close")
}
    ;
actions.closeENTip = function (c, b) {
    if ($("#rmTip").is(":checked")) {
        Cookies.set("wkdth_rmEDTip", 1, {
            expires: 90
        })
    }
}
    ;
actions.likeBook = function (d, b) {
    var c = +!d.hasClass("btn-unlike");
    updateBookStats(bookId, chapterId, 2, c, function (e) {
        if (e) {
            if (c) {
                $(".btn-like").addClass("btn-unlike").removeClass("btn-like")
            } else {
                $(".btn-unlike").addClass("btn-like").removeClass("btn-unlike")
            }
        }
    })
}
    ;
actions.thankBook = function (d, b) {
    var c = +!d.hasClass("btn-thank");
    updateBookStats(bookId, chapterId, 3, c, function (f, e) {
        if (f) {
            if (c) {
                d.addClass("btn-thank")
            } else {
                d.removeClass("btn-thank")
            }
        } else {
            if (e) {
                if (e.err == ApiError.EXCEED_LIMIT) {
                    Materialize.toast("Bạn chỉ có thể thank " + e.data.limit + " lần trong ngày.", 2000)
                }
            }
        }
    })
}
    ;
actions.report = function (d, c) {
    if (validateFormReport()) {
        var b = "/report";
        $.ajax({
            type: "POST",
            url: b,
            data: $("#formReport").serialize(),
            success: function (e) {
                if (e.err == ApiError.SUCCESS) {
                    Materialize.toast("Cảm ơn bạn đã góp ý", 2000);
                    $("#modalReport").closeModal()
                } else {
                    Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
                }
            },
            error: function (g, e, f) {
                Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
            }
        })
    } else {
        Materialize.toast("Vui lòng kiểm tra lại thông tin nhập!", 2000)
    }
}
    ;
var changes = {
    changeFont: function (c, b) {
        $("#bookContent").removeClass(function (d, e) {
            return (e.match(/(^|\s)font-\S+/g) || []).join(" ")
        });
        $("#bookContent").addClass(c.val());
        Cookies.set("wkdth_bookContentFont", c.val(), {
            expires: 90
        })
    },
    changeSize: function (c, b) {
        $("#bookContent").removeClass(function (d, e) {
            return (e.match(/(^|\s)size-\S+/g) || []).join(" ")
        });
        $("#bookContent").addClass(c.val());
        Cookies.set("wkdth_bookContentSize", c.val(), {
            expires: 90
        })
    },
    changeLine: function (c, b) {
        $("#bookContent").removeClass(function (d, e) {
            return (e.match(/(^|\s)line-\S+/g) || []).join(" ")
        });
        $("#bookContent").addClass(c.val());
        Cookies.set("wkdth_bookContentLine", c.val(), {
            expires: 90
        })
    }
};
function validateFormReport() {
    var c = true;
    var b = {};
    $.each($("#formReport").serializeArray(), function (d, e) {
        b[e.name] = e.value
    });
    if (!b.reason || b.reason.length > 1000) {
        $("textarea[name='reason']").removeClass("valid").addClass("invalid");
        c = false
    } else {
        $("textarea[name='reason']").removeClass("invalid").addClass("valid")
    }
    return c
}
$("body").on("change", "[data-change]", function (b) {
    var c = $(this).data("change");
    if (c in changes) {
        changes[c]($(this), b)
    }
});
if (Cookies.get("wkdth_bookContentFont")) {
    $("#bookContent").addClass(Cookies.get("wkdth_bookContentFont"));
    $("#selectFont").val(Cookies.get("wkdth_bookContentFont"))
}
if (Cookies.get("wkdth_bookContentSize")) {
    $("#bookContent").addClass(Cookies.get("wkdth_bookContentSize"));
    $("#selectSize").val(Cookies.get("wkdth_bookContentSize"))
} else {
    if ($(document).width() <= 600) {
        $("#bookContent").addClass("size-16");
        $("#selectSize").val("size-16")
    }
}
if (Cookies.get("wkdth_bookContentLine")) {
    $("#bookContent").addClass(Cookies.get("wkdth_bookContentLine"));
    $("#selectLine").val(Cookies.get("wkdth_bookContentLine"))
}
if (Cookies.get("wkdth_bookContentColor")) {
    $("main").addClass(Cookies.get("wkdth_bookContentColor"))
} else {
    $("main").addClass("color-2")
}
var changeNameTimer;
$("#nameCn").on("input", function () {
    if (changeNameTimer) {
        clearTimeout(changeNameTimer)
    }
    var b = $(this);
    changeNameTimer = setTimeout(function () {
        transText(false)
    }, 1000)
});
readys.loadChapter = function (e, c) {
    var b = "/chapters/content";
    var d = {
        id: e.data("id"),
        type: e.data("type"),
        token: e.data("token")
    };
    e.attr("data-id", null);
    e.attr("data-type", null);
    e.attr("data-token", null);
    e.attr("data-ready", null);
    $.ajax({
        type: "POST",
        url: b,
        data: d,
        success: function (f) {
            if (f) {
                e.html(f)
            } else {
                e.text("Nội dung đang được cập nhật. Vui lòng quay lại sau!").addClass("center")
            }
        },
        error: function (h, f, g) {
            Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
        }
    })
}
    ;
loadChapterContent = function () {
    var c = "/chapters/content";
    var b = signFunc(fuzzySign(signKey + transType + editName));
    var d = {
        id: chapterId,
        type: transType,
        editName: editName,
        signKey: signKey,
        sign: b
    };
    $.ajax({
        type: "POST",
        url: c,
        data: d,
        success: function (e) {
            $(".content-body-wrapper").html(e);
            if (editName) {
                $(".contextmenu-button").contextmenu()
            }
        },
        error: function (g, e, f) { }
    })
}
    ;
actions.loadChapterPart = function (g, e) {
    var d = "/chapters/part";
    var c = g.data("pn");
    var b = signFunc(fuzzySign(signKey + g.data("type") + c + editName));
    var f = {
        id: g.data("id"),
        type: g.data("type"),
        pn: c,
        en: editName,
        signKey: signKey,
        sign: b
    };
    $.ajax({
        type: "POST",
        url: d,
        data: f,
        success: function (h) {
            if (h && h.err == ApiError.SUCCESS) {
                $(".chapter-part.active").removeClass("active");
                $(".chapter-part[data-pn=" + c + "]").addClass("active");
                $("#bookContentBody").html(h.data.content);
                if (g.data("stt")) {
                    $("html, body").animate({
                        scrollTop: 0
                    }, "slow")
                }
                if (editName) {
                    alignIndexes = h.data.align_indexes
                }
            } else {
                g.text("Nội dung đang được cập nhật. Vui lòng quay lại sau!").addClass("center")
            }
        },
        error: function (j, h, i) {
            Materialize.toast("Lỗi không xác định. Vui lòng thử lại sau!", 2000)
        }
    })
}
    ;
actions.activateEditName = function (e, d) {
    var g = e.data("id");
    var b = Cookies.get("wkdth_bookEditName");
    var c = -1;
    var f = [];
    if (b) {
        f = b.split("|");
        c = f.indexOf(g)
    }
    if (e.data("value") == 1) {
        if (c < 0) {
            if (b) {
                if (f.length >= 10) {
                    f.splice(0, f.length - 9);
                    b = f.join("|")
                }
                b += "|" + g
            } else {
                b = g
            }
            Cookies.set("wkdth_bookEditName", b)
        }
    } else {
        if (c > -1) {
            f.splice(c, 1);
            Cookies.set("wkdth_bookEditName", f.join("|"))
        }
    }
    location.reload()
}
    ;
var signFunc = function a(W) {
    function V(d, c) {
        return d >>> c | d << 32 - c
    }
    for (var U, T, S = Math.pow, R = S(2, 32), Q = "length", P = "", O = [], N = 8 * W[Q], M = a.h = a.h || [], L = a.k = a.k || [], K = L[Q], J = {}, I = 2; 64 > K; I++) {
        if (!J[I]) {
            for (U = 0; 313 > U; U += I) {
                J[U] = I
            }
            M[K] = S(I, 0.5) * R | 0,
                L[K++] = S(I, 1 / 3) * R | 0
        }
    }
    for (W += "\x80"; W[Q] % 64 - 56;) {
        W += "\x00"
    }
    for (U = 0; U < W[Q]; U++) {
        if (T = W.charCodeAt(U),
            T >> 8) {
            return
        }
        O[U >> 2] |= T << (3 - U) % 4 * 8
    }
    for (O[O[Q]] = N / R | 0,
        O[O[Q]] = N,
        T = 0; T < O[Q];) {
        var H = O.slice(T, T += 16)
            , G = M;
        for (M = M.slice(0, 8),
            U = 0; 64 > U; U++) {
            var F = H[U - 15]
                , E = H[U - 2]
                , D = M[0]
                , C = M[4]
                , B = M[7] + (V(C, 6) ^ V(C, 11) ^ V(C, 25)) + (C & M[5] ^ ~C & M[6]) + L[U] + (H[U] = 16 > U ? H[U] : H[U - 16] + (V(F, 7) ^ V(F, 18) ^ F >>> 3) + H[U - 7] + (V(E, 17) ^ V(E, 19) ^ E >>> 10) | 0)
                , A = (V(D, 2) ^ V(D, 13) ^ V(D, 22)) + (D & M[1] ^ D & M[2] ^ M[1] & M[2]);
            M = [B + A | 0].concat(M),
                M[4] = M[4] + B | 0
        }
        for (U = 0; 8 > U; U++) {
            M[U] = M[U] + G[U] | 0
        }
    }
    for (U = 0; 8 > U; U++) {
        for (T = 3; T + 1; T--) {
            var z = M[U] >> 8 * T & 255;
            P += (16 > z ? 0 : "") + z.toString(16)
        }
    }
    return P
};
function addHotkeys() {
    $(document).keydown(function (c) {
        if (c.shiftKey || c.ctrlKey) {
            return
        }
        switch (c.which) {
            case 37:
                var b = $("#btnPreChapter");
                if (b.length) {
                    b[0].click()
                }
                break;
            case 39:
                var d = $("#btnNextChapter");
                if (d.length) {
                    d[0].click()
                }
                break;
            default:
                return
        }
        c.preventDefault()
    })
}
touchs.scrollTopContent = function (c, b) {
    $("html, body").animate({
        scrollTop: $("#bookContent").offset().top
    }, "fast")
}
    ;
touchs.scrollBottomContent = function (e, d) {
    var c = $("#bookContent");
    var b = c.outerHeight(true) - $(window).height();
    if (b < 0) {
        b = 0
    }
    $("html, body").animate({
        scrollTop: c.offset().top + b
    }, "fast")
}
    ;
$(document).scroll(function () {
    var b = $("#bookContent");
    if ($(this).scrollTop() >= b.offset().top) {
        $("#btnMore").removeClass("hide")
    } else {
        $("#btnMore").addClass("hide")
    }
});
$("body").on("click tap touchstart touchend touchmove", function (b) {
    if (!document.getElementById("btnMore").contains(b.target)) {
        $("#btnMore").closeFAB()
    }
});
